[{"title":"Axes","type":0,"sectionRef":"#","url":"/Squash/api/Axes","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Axes","url":"/Squash/api/Axes#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Axes","url":"/Squash/api/Axes#ser","content":"&lt;/&gt; Axes.ser(x: Axes) → string   "},{"title":"des​","type":1,"pageTitle":"Axes","url":"/Squash/api/Axes#des","content":"&lt;/&gt; Axes.des(y: string) → Axes   "},{"title":"serarr​","type":1,"pageTitle":"Axes","url":"/Squash/api/Axes#serarr","content":"&lt;/&gt; Axes.serarr(x: {Axes}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Axes","url":"/Squash/api/Axes#desarr","content":"&lt;/&gt; Axes.desarr(y: string) → {Axes}  "},{"title":"Color3","type":0,"sectionRef":"#","url":"/Squash/api/Color3","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Color3","url":"/Squash/api/Color3#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Color3","url":"/Squash/api/Color3#ser","content":"&lt;/&gt; Color3.ser(x: Color3) → string   "},{"title":"des​","type":1,"pageTitle":"Color3","url":"/Squash/api/Color3#des","content":"&lt;/&gt; Color3.des(y: string) → Color3   "},{"title":"serarr​","type":1,"pageTitle":"Color3","url":"/Squash/api/Color3#serarr","content":"&lt;/&gt; Color3.serarr(x: {Color3}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Color3","url":"/Squash/api/Color3#desarr","content":"&lt;/&gt; Color3.desarr(y: string) → {Color3}  "},{"title":"boolean","type":0,"sectionRef":"#","url":"/Squash/api/boolean","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"boolean","url":"/Squash/api/boolean#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"boolean","url":"/Squash/api/boolean#ser","content":"&lt;/&gt; boolean.ser( x1: boolean?, x2: boolean?, x3: boolean?, x4: boolean?, x5: boolean?, x6: boolean?, x7: boolean?, x8: boolean? ) → string   "},{"title":"des​","type":1,"pageTitle":"boolean","url":"/Squash/api/boolean#des","content":"&lt;/&gt; boolean.des(y: string) → boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean   "},{"title":"serarr​","type":1,"pageTitle":"boolean","url":"/Squash/api/boolean#serarr","content":"&lt;/&gt; boolean.serarr(x: {boolean}) → string   "},{"title":"desarr​","type":1,"pageTitle":"boolean","url":"/Squash/api/boolean#desarr","content":"&lt;/&gt; boolean.desarr(y: string) → {boolean}  "},{"title":"CFrame","type":0,"sectionRef":"#","url":"/Squash/api/CFrame","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CFrame","url":"/Squash/api/CFrame#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"CFrame","url":"/Squash/api/CFrame#ser","content":"&lt;/&gt; CFrame.ser( x: CFrame, serdes: NumberSerDes?, posBytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"CFrame","url":"/Squash/api/CFrame#des","content":"&lt;/&gt; CFrame.des( y: string, serdes: NumberSerDes?, posBytes: number? ) → CFrame   "},{"title":"serarr​","type":1,"pageTitle":"CFrame","url":"/Squash/api/CFrame#serarr","content":"&lt;/&gt; CFrame.serarr( x: {CFrame}, serdes: NumberSerDes?, posBytes: number? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"CFrame","url":"/Squash/api/CFrame#desarr","content":"&lt;/&gt; CFrame.desarr( y: string, posBytes: number, serdes: NumberSerDes? ) → {CFrame}  "},{"title":"DateTime","type":0,"sectionRef":"#","url":"/Squash/api/DateTime","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DateTime","url":"/Squash/api/DateTime#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"DateTime","url":"/Squash/api/DateTime#ser","content":"&lt;/&gt; DateTime.ser(x: DateTime) → string   "},{"title":"des​","type":1,"pageTitle":"DateTime","url":"/Squash/api/DateTime#des","content":"&lt;/&gt; DateTime.des(y: string) → DateTime   "},{"title":"serarr​","type":1,"pageTitle":"DateTime","url":"/Squash/api/DateTime#serarr","content":"&lt;/&gt; DateTime.serarr(x: {DateTime}) → string   "},{"title":"desarr​","type":1,"pageTitle":"DateTime","url":"/Squash/api/DateTime#desarr","content":"&lt;/&gt; DateTime.desarr(y: string) → {DateTime}  "},{"title":"CatalogSearchParams","type":0,"sectionRef":"#","url":"/Squash/api/CatalogSearchParams","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CatalogSearchParams","url":"/Squash/api/CatalogSearchParams#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"CatalogSearchParams","url":"/Squash/api/CatalogSearchParams#ser","content":"&lt;/&gt; CatalogSearchParams.ser( x: CatalogSearchParams, alphabet: Alphabet? ) → string   "},{"title":"des​","type":1,"pageTitle":"CatalogSearchParams","url":"/Squash/api/CatalogSearchParams#des","content":"&lt;/&gt; CatalogSearchParams.des( y: string, alphabet: Alphabet? ) → CatalogSearchParams   "},{"title":"serarr​","type":1,"pageTitle":"CatalogSearchParams","url":"/Squash/api/CatalogSearchParams#serarr","content":"&lt;/&gt; CatalogSearchParams.serarr( x: {CatalogSearchParams}, alphabet: Alphabet? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"CatalogSearchParams","url":"/Squash/api/CatalogSearchParams#desarr","content":"&lt;/&gt; CatalogSearchParams.desarr( y: string, alphabet: Alphabet? ) → {CatalogSearchParams}  "},{"title":"Enum","type":0,"sectionRef":"#","url":"/Squash/api/Enum","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Enum","url":"/Squash/api/Enum#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Enum","url":"/Squash/api/Enum#ser","content":"&lt;/&gt; Enum.ser(x: Enum) → string   "},{"title":"des​","type":1,"pageTitle":"Enum","url":"/Squash/api/Enum#des","content":"&lt;/&gt; Enum.des(y: string) → Enum   "},{"title":"serarr​","type":1,"pageTitle":"Enum","url":"/Squash/api/Enum#serarr","content":"&lt;/&gt; Enum.serarr(x: {Enum}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Enum","url":"/Squash/api/Enum#desarr","content":"&lt;/&gt; Enum.desarr(y: string) → {Enum}  "},{"title":"ColorSequence","type":0,"sectionRef":"#","url":"/Squash/api/ColorSequence","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ColorSequence","url":"/Squash/api/ColorSequence#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"ColorSequence","url":"/Squash/api/ColorSequence#ser","content":"&lt;/&gt; ColorSequence.ser(x: ColorSequence) → string   "},{"title":"des​","type":1,"pageTitle":"ColorSequence","url":"/Squash/api/ColorSequence#des","content":"&lt;/&gt; ColorSequence.des(y: string) → ColorSequence   "},{"title":"serarr​","type":1,"pageTitle":"ColorSequence","url":"/Squash/api/ColorSequence#serarr","content":"&lt;/&gt; ColorSequence.serarr(x: {ColorSequence}) → string   "},{"title":"desarr​","type":1,"pageTitle":"ColorSequence","url":"/Squash/api/ColorSequence#desarr","content":"&lt;/&gt; ColorSequence.desarr(y: string) → {ColorSequence}  "},{"title":"ColorSequenceKeypoint","type":0,"sectionRef":"#","url":"/Squash/api/ColorSequenceKeypoint","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ColorSequenceKeypoint","url":"/Squash/api/ColorSequenceKeypoint#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"ColorSequenceKeypoint","url":"/Squash/api/ColorSequenceKeypoint#ser","content":"&lt;/&gt; ColorSequenceKeypoint.ser(x: ColorSequenceKeypoint) → string   "},{"title":"des​","type":1,"pageTitle":"ColorSequenceKeypoint","url":"/Squash/api/ColorSequenceKeypoint#des","content":"&lt;/&gt; ColorSequenceKeypoint.des(y: string) → ColorSequenceKeypoint   "},{"title":"serarr​","type":1,"pageTitle":"ColorSequenceKeypoint","url":"/Squash/api/ColorSequenceKeypoint#serarr","content":"&lt;/&gt; ColorSequenceKeypoint.serarr(x: {ColorSequenceKeypoint}) → string   "},{"title":"desarr​","type":1,"pageTitle":"ColorSequenceKeypoint","url":"/Squash/api/ColorSequenceKeypoint#desarr","content":"&lt;/&gt; ColorSequenceKeypoint.desarr(y: string) → {ColorSequenceKeypoint}  "},{"title":"DockWidgetPluginGuiInfo","type":0,"sectionRef":"#","url":"/Squash/api/DockWidgetPluginGuiInfo","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DockWidgetPluginGuiInfo","url":"/Squash/api/DockWidgetPluginGuiInfo#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"DockWidgetPluginGuiInfo","url":"/Squash/api/DockWidgetPluginGuiInfo#ser","content":"&lt;/&gt; DockWidgetPluginGuiInfo.ser(x: DockWidgetPluginGuiInfo) → string   "},{"title":"des​","type":1,"pageTitle":"DockWidgetPluginGuiInfo","url":"/Squash/api/DockWidgetPluginGuiInfo#des","content":"&lt;/&gt; DockWidgetPluginGuiInfo.des(y: string) → DockWidgetPluginGuiInfo   "},{"title":"serarr​","type":1,"pageTitle":"DockWidgetPluginGuiInfo","url":"/Squash/api/DockWidgetPluginGuiInfo#serarr","content":"&lt;/&gt; DockWidgetPluginGuiInfo.serarr(x: {DockWidgetPluginGuiInfo}) → string   "},{"title":"desarr​","type":1,"pageTitle":"DockWidgetPluginGuiInfo","url":"/Squash/api/DockWidgetPluginGuiInfo#desarr","content":"&lt;/&gt; DockWidgetPluginGuiInfo.desarr(y: string) → {DockWidgetPluginGuiInfo}  "},{"title":"BrickColor","type":0,"sectionRef":"#","url":"/Squash/api/BrickColor","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BrickColor","url":"/Squash/api/BrickColor#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"BrickColor","url":"/Squash/api/BrickColor#ser","content":"&lt;/&gt; BrickColor.ser(x: BrickColor) → string   "},{"title":"des​","type":1,"pageTitle":"BrickColor","url":"/Squash/api/BrickColor#des","content":"&lt;/&gt; BrickColor.des(y: string) → BrickColor   "},{"title":"serarr​","type":1,"pageTitle":"BrickColor","url":"/Squash/api/BrickColor#serarr","content":"&lt;/&gt; BrickColor.serarr(x: {BrickColor}) → string   "},{"title":"desarr​","type":1,"pageTitle":"BrickColor","url":"/Squash/api/BrickColor#desarr","content":"&lt;/&gt; BrickColor.desarr(y: string) → {BrickColor}  "},{"title":"EnumItem","type":0,"sectionRef":"#","url":"/Squash/api/EnumItem","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"EnumItem","url":"/Squash/api/EnumItem#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"EnumItem","url":"/Squash/api/EnumItem#ser","content":"&lt;/&gt; EnumItem.ser(x: EnumItem) → string   "},{"title":"des​","type":1,"pageTitle":"EnumItem","url":"/Squash/api/EnumItem#des","content":"&lt;/&gt; EnumItem.des( y: string, enum: Enum ) → EnumItem   "},{"title":"serarr​","type":1,"pageTitle":"EnumItem","url":"/Squash/api/EnumItem#serarr","content":"&lt;/&gt; EnumItem.serarr(x: {EnumItem}) → string   "},{"title":"desarr​","type":1,"pageTitle":"EnumItem","url":"/Squash/api/EnumItem#desarr","content":"&lt;/&gt; EnumItem.desarr( y: string, enum: Enum ) → {EnumItem}  "},{"title":"Font","type":0,"sectionRef":"#","url":"/Squash/api/Font","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Font","url":"/Squash/api/Font#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Font","url":"/Squash/api/Font#ser","content":"&lt;/&gt; Font.ser(x: Font) → string   "},{"title":"des​","type":1,"pageTitle":"Font","url":"/Squash/api/Font#des","content":"&lt;/&gt; Font.des(y: string) → Font   "},{"title":"serarr​","type":1,"pageTitle":"Font","url":"/Squash/api/Font#serarr","content":"&lt;/&gt; Font.serarr(x: {Font}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Font","url":"/Squash/api/Font#desarr","content":"&lt;/&gt; Font.desarr(y: string) → {Font}  "},{"title":"Faces","type":0,"sectionRef":"#","url":"/Squash/api/Faces","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Faces","url":"/Squash/api/Faces#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Faces","url":"/Squash/api/Faces#ser","content":"&lt;/&gt; Faces.ser(x: Faces) → string   "},{"title":"des​","type":1,"pageTitle":"Faces","url":"/Squash/api/Faces#des","content":"&lt;/&gt; Faces.des(y: string) → Faces   "},{"title":"serarr​","type":1,"pageTitle":"Faces","url":"/Squash/api/Faces#serarr","content":"&lt;/&gt; Faces.serarr(x: {Faces}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Faces","url":"/Squash/api/Faces#desarr","content":"&lt;/&gt; Faces.desarr(y: string) → {Faces}  "},{"title":"number","type":0,"sectionRef":"#","url":"/Squash/api/number","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"number","url":"/Squash/api/number#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"number","url":"/Squash/api/number#ser","content":"&lt;/&gt; number.ser( x: number, bytes: FloatBytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"number","url":"/Squash/api/number#des","content":"&lt;/&gt; number.des( y: string, bytes: FloatBytes? ) → number   "},{"title":"serarr​","type":1,"pageTitle":"number","url":"/Squash/api/number#serarr","content":"&lt;/&gt; number.serarr( x: {number}, bytes: FloatBytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"number","url":"/Squash/api/number#desarr","content":"&lt;/&gt; number.desarr( y: string, bytes: FloatBytes? ) → {number}  "},{"title":"FloatCurveKey","type":0,"sectionRef":"#","url":"/Squash/api/FloatCurveKey","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FloatCurveKey","url":"/Squash/api/FloatCurveKey#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"FloatCurveKey","url":"/Squash/api/FloatCurveKey#ser","content":"&lt;/&gt; FloatCurveKey.ser( x: FloatCurveKey, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"FloatCurveKey","url":"/Squash/api/FloatCurveKey#des","content":"&lt;/&gt; FloatCurveKey.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → FloatCurveKey   "},{"title":"serarr​","type":1,"pageTitle":"FloatCurveKey","url":"/Squash/api/FloatCurveKey#serarr","content":"&lt;/&gt; FloatCurveKey.serarr( x: {FloatCurveKey}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"FloatCurveKey","url":"/Squash/api/FloatCurveKey#desarr","content":"&lt;/&gt; FloatCurveKey.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {FloatCurveKey}  "},{"title":"int","type":0,"sectionRef":"#","url":"/Squash/api/int","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"int","url":"/Squash/api/int#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"int","url":"/Squash/api/int#ser","content":"&lt;/&gt; int.ser( x: number, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"int","url":"/Squash/api/int#des","content":"&lt;/&gt; int.des( y: string, bytes: Bytes? ) → number   "},{"title":"serarr​","type":1,"pageTitle":"int","url":"/Squash/api/int#serarr","content":"&lt;/&gt; int.serarr( x: {number}, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"int","url":"/Squash/api/int#desarr","content":"&lt;/&gt; int.desarr( y: string, bytes: Bytes? ) → {number}  "},{"title":"OverlapParams","type":0,"sectionRef":"#","url":"/Squash/api/OverlapParams","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"OverlapParams","url":"/Squash/api/OverlapParams#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"OverlapParams","url":"/Squash/api/OverlapParams#ser","content":"&lt;/&gt; OverlapParams.ser(x: OverlapParams) → string The FilterDescedantsInstances property is not serialized because is an array of Instance objects, which are not supported.  "},{"title":"des​","type":1,"pageTitle":"OverlapParams","url":"/Squash/api/OverlapParams#des","content":"&lt;/&gt; OverlapParams.des(y: string) → OverlapParams   "},{"title":"serarr​","type":1,"pageTitle":"OverlapParams","url":"/Squash/api/OverlapParams#serarr","content":"&lt;/&gt; OverlapParams.serarr(x: {OverlapParams}) → string   "},{"title":"desarr​","type":1,"pageTitle":"OverlapParams","url":"/Squash/api/OverlapParams#desarr","content":"&lt;/&gt; OverlapParams.desarr(y: string) → {OverlapParams}  "},{"title":"PathWaypoint","type":0,"sectionRef":"#","url":"/Squash/api/PathWaypoint","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PathWaypoint","url":"/Squash/api/PathWaypoint#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"PathWaypoint","url":"/Squash/api/PathWaypoint#ser","content":"&lt;/&gt; PathWaypoint.ser( x: PathWaypoint, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"PathWaypoint","url":"/Squash/api/PathWaypoint#des","content":"&lt;/&gt; PathWaypoint.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → PathWaypoint   "},{"title":"serarr​","type":1,"pageTitle":"PathWaypoint","url":"/Squash/api/PathWaypoint#serarr","content":"&lt;/&gt; PathWaypoint.serarr( x: {PathWaypoint}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"PathWaypoint","url":"/Squash/api/PathWaypoint#desarr","content":"&lt;/&gt; PathWaypoint.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {PathWaypoint}  "},{"title":"NumberSequenceKeypoint","type":0,"sectionRef":"#","url":"/Squash/api/NumberSequenceKeypoint","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberSequenceKeypoint","url":"/Squash/api/NumberSequenceKeypoint#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"NumberSequenceKeypoint","url":"/Squash/api/NumberSequenceKeypoint#ser","content":"&lt;/&gt; NumberSequenceKeypoint.ser( x: NumberSequenceKeypoint, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"NumberSequenceKeypoint","url":"/Squash/api/NumberSequenceKeypoint#des","content":"&lt;/&gt; NumberSequenceKeypoint.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → NumberSequenceKeypoint   "},{"title":"serarr​","type":1,"pageTitle":"NumberSequenceKeypoint","url":"/Squash/api/NumberSequenceKeypoint#serarr","content":"&lt;/&gt; NumberSequenceKeypoint.serarr( x: {NumberSequenceKeypoint}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"NumberSequenceKeypoint","url":"/Squash/api/NumberSequenceKeypoint#desarr","content":"&lt;/&gt; NumberSequenceKeypoint.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {NumberSequenceKeypoint}  "},{"title":"Ray","type":0,"sectionRef":"#","url":"/Squash/api/Ray","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Ray","url":"/Squash/api/Ray#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Ray","url":"/Squash/api/Ray#ser","content":"&lt;/&gt; Ray.ser( x: Ray, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"Ray","url":"/Squash/api/Ray#des","content":"&lt;/&gt; Ray.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → Ray   "},{"title":"serarr​","type":1,"pageTitle":"Ray","url":"/Squash/api/Ray#serarr","content":"&lt;/&gt; Ray.serarr( x: {Ray}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"Ray","url":"/Squash/api/Ray#desarr","content":"&lt;/&gt; Ray.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {Ray}  "},{"title":"NumberRange","type":0,"sectionRef":"#","url":"/Squash/api/NumberRange","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberRange","url":"/Squash/api/NumberRange#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"NumberRange","url":"/Squash/api/NumberRange#ser","content":"&lt;/&gt; NumberRange.ser( x: NumberRange, serdes: NumberSerDes?, bytes: Bytes? ) → ()   "},{"title":"des​","type":1,"pageTitle":"NumberRange","url":"/Squash/api/NumberRange#des","content":"&lt;/&gt; NumberRange.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → NumberRange   "},{"title":"serarr​","type":1,"pageTitle":"NumberRange","url":"/Squash/api/NumberRange#serarr","content":"&lt;/&gt; NumberRange.serarr( x: {NumberRange}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"NumberRange","url":"/Squash/api/NumberRange#desarr","content":"&lt;/&gt; NumberRange.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {NumberRange}  "},{"title":"PhysicalProperties","type":0,"sectionRef":"#","url":"/Squash/api/PhysicalProperties","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PhysicalProperties","url":"/Squash/api/PhysicalProperties#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"PhysicalProperties","url":"/Squash/api/PhysicalProperties#ser","content":"&lt;/&gt; PhysicalProperties.ser( x: PhysicalProperties, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"PhysicalProperties","url":"/Squash/api/PhysicalProperties#des","content":"&lt;/&gt; PhysicalProperties.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → PhysicalProperties The minimum density is 0.009999999776482582, so if the serialization rounds down to 0, it will be set to 0.009999999776482582 when deserialized.  "},{"title":"serarr​","type":1,"pageTitle":"PhysicalProperties","url":"/Squash/api/PhysicalProperties#serarr","content":"&lt;/&gt; PhysicalProperties.serarr( x: {PhysicalProperties}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"PhysicalProperties","url":"/Squash/api/PhysicalProperties#desarr","content":"&lt;/&gt; PhysicalProperties.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {PhysicalProperties}  "},{"title":"NumberSequence","type":0,"sectionRef":"#","url":"/Squash/api/NumberSequence","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberSequence","url":"/Squash/api/NumberSequence#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"NumberSequence","url":"/Squash/api/NumberSequence#ser","content":"&lt;/&gt; NumberSequence.ser( x: NumberSequence, serdes: NumberSerDes?, bytes: Bytes? ) → string Careful when calling this with Squash.uint,  "},{"title":"des​","type":1,"pageTitle":"NumberSequence","url":"/Squash/api/NumberSequence#des","content":"&lt;/&gt; NumberSequence.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → NumberSequence   "},{"title":"serarr​","type":1,"pageTitle":"NumberSequence","url":"/Squash/api/NumberSequence#serarr","content":"&lt;/&gt; NumberSequence.serarr( x: {NumberSequence}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"NumberSequence","url":"/Squash/api/NumberSequence#desarr","content":"&lt;/&gt; NumberSequence.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {NumberSequence}  "},{"title":"RaycastResult","type":0,"sectionRef":"#","url":"/Squash/api/RaycastResult","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RaycastResult","url":"/Squash/api/RaycastResult#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"RaycastResult","url":"/Squash/api/RaycastResult#ser","content":"&lt;/&gt; RaycastResult.ser( x: RaycastResult, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"RaycastResult","url":"/Squash/api/RaycastResult#des","content":"&lt;/&gt; RaycastResult.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → { Material: Enum.Material, Distance: number, Position: Vector3, Normal: Vector3 }   "},{"title":"serarr​","type":1,"pageTitle":"RaycastResult","url":"/Squash/api/RaycastResult#serarr","content":"&lt;/&gt; RaycastResult.serarr( x: {RaycastResult}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"RaycastResult","url":"/Squash/api/RaycastResult#desarr","content":"&lt;/&gt; RaycastResult.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {RaycastResult}  "},{"title":"Rect","type":0,"sectionRef":"#","url":"/Squash/api/Rect","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Rect","url":"/Squash/api/Rect#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Rect","url":"/Squash/api/Rect#ser","content":"&lt;/&gt; Rect.ser( x: Rect, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"Rect","url":"/Squash/api/Rect#des","content":"&lt;/&gt; Rect.des( y: string, bytes: Bytes? ) → Rect   "},{"title":"serarr​","type":1,"pageTitle":"Rect","url":"/Squash/api/Rect#serarr","content":"&lt;/&gt; Rect.serarr( x: {Rect}, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"Rect","url":"/Squash/api/Rect#desarr","content":"&lt;/&gt; Rect.desarr( y: string, bytes: Bytes? ) → {Rect}  "},{"title":"Region3","type":0,"sectionRef":"#","url":"/Squash/api/Region3","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Region3","url":"/Squash/api/Region3#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Region3","url":"/Squash/api/Region3#ser","content":"&lt;/&gt; Region3.ser( x: Region3, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"Region3","url":"/Squash/api/Region3#des","content":"&lt;/&gt; Region3.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → Region3   "},{"title":"serarr​","type":1,"pageTitle":"Region3","url":"/Squash/api/Region3#serarr","content":"&lt;/&gt; Region3.serarr( x: {Region3}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"Region3","url":"/Squash/api/Region3#desarr","content":"&lt;/&gt; Region3.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {Region3}  "},{"title":"Region3int16","type":0,"sectionRef":"#","url":"/Squash/api/Region3int16","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Region3int16","url":"/Squash/api/Region3int16#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Region3int16","url":"/Squash/api/Region3int16#ser","content":"&lt;/&gt; Region3int16.ser(x: Region3int16) → string   "},{"title":"des​","type":1,"pageTitle":"Region3int16","url":"/Squash/api/Region3int16#des","content":"&lt;/&gt; Region3int16.des(y: string) → Region3int16   "},{"title":"serarr​","type":1,"pageTitle":"Region3int16","url":"/Squash/api/Region3int16#serarr","content":"&lt;/&gt; Region3int16.serarr(x: {Region3int16}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Region3int16","url":"/Squash/api/Region3int16#desarr","content":"&lt;/&gt; Region3int16.desarr(y: string) → {Region3int16}  "},{"title":"RaycastParams","type":0,"sectionRef":"#","url":"/Squash/api/RaycastParams","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RaycastParams","url":"/Squash/api/RaycastParams#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"RaycastParams","url":"/Squash/api/RaycastParams#ser","content":"&lt;/&gt; RaycastParams.ser(x: RaycastParams) → string   "},{"title":"des​","type":1,"pageTitle":"RaycastParams","url":"/Squash/api/RaycastParams#des","content":"&lt;/&gt; RaycastParams.des(y: string) → RaycastParams   "},{"title":"serarr​","type":1,"pageTitle":"RaycastParams","url":"/Squash/api/RaycastParams#serarr","content":"&lt;/&gt; RaycastParams.serarr(x: {RaycastParams}) → string   "},{"title":"desarr​","type":1,"pageTitle":"RaycastParams","url":"/Squash/api/RaycastParams#desarr","content":"&lt;/&gt; RaycastParams.desarr(y: string) → {RaycastParams}  "},{"title":"string","type":0,"sectionRef":"#","url":"/Squash/api/string","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"string","url":"/Squash/api/string#functions","content":" "},{"title":"alphabet​","type":1,"pageTitle":"string","url":"/Squash/api/string#alphabet","content":"&lt;/&gt; string.alphabet(source: string) → Alphabet Maps a string to the smallest sorted alphabet that represents it.  "},{"title":"convert​","type":1,"pageTitle":"string","url":"/Squash/api/string#convert","content":"&lt;/&gt; string.convert( x: string, inAlphabet: Alphabet, outAlphabet: Alphabet ) → string Converts a string from one alphabet to another.  "},{"title":"ser​","type":1,"pageTitle":"string","url":"/Squash/api/string#ser","content":"&lt;/&gt; string.ser( x: string, alphabet: Alphabet? ) → string   "},{"title":"des​","type":1,"pageTitle":"string","url":"/Squash/api/string#des","content":"&lt;/&gt; string.des( y: string, alphabet: Alphabet? ) → string   "},{"title":"serarr​","type":1,"pageTitle":"string","url":"/Squash/api/string#serarr","content":"&lt;/&gt; string.serarr( x: {string}, alphabet: Alphabet? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"string","url":"/Squash/api/string#desarr","content":"&lt;/&gt; string.desarr( y: string, alphabet: Alphabet? ) → {string}  "},{"title":"TweenInfo","type":0,"sectionRef":"#","url":"/Squash/api/TweenInfo","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"TweenInfo","url":"/Squash/api/TweenInfo#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"TweenInfo","url":"/Squash/api/TweenInfo#ser","content":"&lt;/&gt; TweenInfo.ser( x: TweenInfo, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"TweenInfo","url":"/Squash/api/TweenInfo#des","content":"&lt;/&gt; TweenInfo.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → TweenInfo   "},{"title":"serarr​","type":1,"pageTitle":"TweenInfo","url":"/Squash/api/TweenInfo#serarr","content":"&lt;/&gt; TweenInfo.serarr( x: {TweenInfo}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"TweenInfo","url":"/Squash/api/TweenInfo#desarr","content":"&lt;/&gt; TweenInfo.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {TweenInfo}  "},{"title":"UDim2","type":0,"sectionRef":"#","url":"/Squash/api/UDim2","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"UDim2","url":"/Squash/api/UDim2#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"UDim2","url":"/Squash/api/UDim2#ser","content":"&lt;/&gt; UDim2.ser( x: UDim2, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"UDim2","url":"/Squash/api/UDim2#des","content":"&lt;/&gt; UDim2.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → UDim2   "},{"title":"serarr​","type":1,"pageTitle":"UDim2","url":"/Squash/api/UDim2#serarr","content":"&lt;/&gt; UDim2.serarr( x: {UDim2}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"UDim2","url":"/Squash/api/UDim2#desarr","content":"&lt;/&gt; UDim2.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {UDim2}  "},{"title":"UDim","type":0,"sectionRef":"#","url":"/Squash/api/UDim","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"UDim","url":"/Squash/api/UDim#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"UDim","url":"/Squash/api/UDim#ser","content":"&lt;/&gt; UDim.ser( x: UDim, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"UDim","url":"/Squash/api/UDim#des","content":"&lt;/&gt; UDim.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → UDim   "},{"title":"serarr​","type":1,"pageTitle":"UDim","url":"/Squash/api/UDim#serarr","content":"&lt;/&gt; UDim.serarr( x: {UDim}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"UDim","url":"/Squash/api/UDim#desarr","content":"&lt;/&gt; UDim.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {UDim}  "},{"title":"Vector2","type":0,"sectionRef":"#","url":"/Squash/api/Vector2","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector2","url":"/Squash/api/Vector2#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Vector2","url":"/Squash/api/Vector2#ser","content":"&lt;/&gt; Vector2.ser( x: Vector2, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"Vector2","url":"/Squash/api/Vector2#des","content":"&lt;/&gt; Vector2.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → Vector2   "},{"title":"serarr​","type":1,"pageTitle":"Vector2","url":"/Squash/api/Vector2#serarr","content":"&lt;/&gt; Vector2.serarr( x: {Vector2}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"Vector2","url":"/Squash/api/Vector2#desarr","content":"&lt;/&gt; Vector2.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {Vector2}  "},{"title":"Vector2int16","type":0,"sectionRef":"#","url":"/Squash/api/Vector2int16","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector2int16","url":"/Squash/api/Vector2int16#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Vector2int16","url":"/Squash/api/Vector2int16#ser","content":"&lt;/&gt; Vector2int16.ser(x: Vector2int16) → string   "},{"title":"des​","type":1,"pageTitle":"Vector2int16","url":"/Squash/api/Vector2int16#des","content":"&lt;/&gt; Vector2int16.des(y: string) → Vector2int16   "},{"title":"serarr​","type":1,"pageTitle":"Vector2int16","url":"/Squash/api/Vector2int16#serarr","content":"&lt;/&gt; Vector2int16.serarr(x: {Vector2int16}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Vector2int16","url":"/Squash/api/Vector2int16#desarr","content":"&lt;/&gt; Vector2int16.desarr(y: string) → {Vector2int16}  "},{"title":"uint","type":0,"sectionRef":"#","url":"/Squash/api/uint","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"uint","url":"/Squash/api/uint#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"uint","url":"/Squash/api/uint#ser","content":"&lt;/&gt; uint.ser( x: number, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"uint","url":"/Squash/api/uint#des","content":"&lt;/&gt; uint.des( y: string, bytes: Bytes? ) → number   "},{"title":"serarr​","type":1,"pageTitle":"uint","url":"/Squash/api/uint#serarr","content":"&lt;/&gt; uint.serarr( x: {number}, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"uint","url":"/Squash/api/uint#desarr","content":"&lt;/&gt; uint.desarr( y: string, bytes: Bytes? ) → {number}  "},{"title":"Squash","type":0,"sectionRef":"#","url":"/Squash/api/Squash","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#types","content":" "},{"title":"Alphabet​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#Alphabet","content":"&lt;/&gt; type Alphabet = string A string of unique characters that represent the basis of other strings.  "},{"title":"Bytes​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#Bytes","content":"&lt;/&gt; type Bytes = number 1, 2, 3, 4, 5, 6, 7, 8 The number of bytes used to represent a number.  "},{"title":"FloatBytes​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#FloatBytes","content":"&lt;/&gt; type FloatBytes = number 4, 8 The number of bytes used to represent a floating point number.  "},{"title":"NumberSer​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#NumberSer","content":"&lt;/&gt; type NumberSer = ( x: number, bytes: Bytes? ) → string A function that serializes a number into a string. Usually this is Squash's uint, int, or number ser methods.  "},{"title":"NumberDes​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#NumberDes","content":"&lt;/&gt; type NumberDes = ( y: string, bytes: Bytes? ) → number A function that deserializes a number from a string. Usually this is Squash's uint, int, or number des methods.  "},{"title":"NumberSerDes​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#NumberSerDes","content":"&lt;/&gt; interface NumberSerDes { ser: NumberSer des: NumberDes }   "},{"title":"SquashRaycastResult​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#SquashRaycastResult","content":"&lt;/&gt; interface SquashRaycastResult { Material: Enum.Material Distance: number Position: Vector3 Normal: Vector3 }  "},{"title":"Properties​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#properties","content":" "},{"title":"delimiter​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#delimiter","content":"&lt;/&gt; Squash.delimiter: string The delimiter used to separate strings or other types in variable sized arrays and act as the 0 element for base conversions.  "},{"title":"digits​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#digits","content":"&lt;/&gt; Squash.digits: Alphabet All digits in base 10.  "},{"title":"lower​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#lower","content":"&lt;/&gt; Squash.lower: Alphabet All lowercase letters in the english language.  "},{"title":"upper​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#upper","content":"&lt;/&gt; Squash.upper: Alphabet All uppercase letters in the english language.  "},{"title":"letters​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#letters","content":"&lt;/&gt; Squash.letters: Alphabet All letters in the english language.  "},{"title":"punctuation​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#punctuation","content":"&lt;/&gt; Squash.punctuation: Alphabet All punctuation symbols in the english language.  "},{"title":"filepath​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#filepath","content":"&lt;/&gt; Squash.filepath: Alphabet   "},{"title":"english​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#english","content":"&lt;/&gt; Squash.english: Alphabet All symbols in the english language.  "},{"title":"utf8​","type":1,"pageTitle":"Squash","url":"/Squash/api/Squash#utf8","content":"&lt;/&gt; Squash.utf8: Alphabet The UTF-8 character set, excluding the delimiter. "},{"title":"Vector3","type":0,"sectionRef":"#","url":"/Squash/api/Vector3","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector3","url":"/Squash/api/Vector3#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Vector3","url":"/Squash/api/Vector3#ser","content":"&lt;/&gt; Vector3.ser( x: Vector3, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"des​","type":1,"pageTitle":"Vector3","url":"/Squash/api/Vector3#des","content":"&lt;/&gt; Vector3.des( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → Vector3   "},{"title":"serarr​","type":1,"pageTitle":"Vector3","url":"/Squash/api/Vector3#serarr","content":"&lt;/&gt; Vector3.serarr( x: {Vector3}, serdes: NumberSerDes?, bytes: Bytes? ) → string   "},{"title":"desarr​","type":1,"pageTitle":"Vector3","url":"/Squash/api/Vector3#desarr","content":"&lt;/&gt; Vector3.desarr( y: string, serdes: NumberSerDes?, bytes: Bytes? ) → {Vector3}  "},{"title":"Vector3int16","type":0,"sectionRef":"#","url":"/Squash/api/Vector3int16","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector3int16","url":"/Squash/api/Vector3int16#functions","content":" "},{"title":"ser​","type":1,"pageTitle":"Vector3int16","url":"/Squash/api/Vector3int16#ser","content":"&lt;/&gt; Vector3int16.ser(x: Vector3int16) → string   "},{"title":"des​","type":1,"pageTitle":"Vector3int16","url":"/Squash/api/Vector3int16#des","content":"&lt;/&gt; Vector3int16.des(y: string) → Vector3int16   "},{"title":"serarr​","type":1,"pageTitle":"Vector3int16","url":"/Squash/api/Vector3int16#serarr","content":"&lt;/&gt; Vector3int16.serarr(x: {Vector3int16}) → string   "},{"title":"desarr​","type":1,"pageTitle":"Vector3int16","url":"/Squash/api/Vector3int16#desarr","content":"&lt;/&gt; Vector3int16.desarr(y: string) → {Vector3int16}  "},{"title":"What Is SerDes?","type":0,"sectionRef":"#","url":"/Squash/docs/intro","content":"","keywords":""},{"title":"Why SerDes?​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#why-serdes","content":"SerDes is a way to minimize latency and save space by reducing the size of data. It is to give the player a better experience. "},{"title":"Minimizing Latency​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#minimizing-latency","content":"In the world of distributed systems, we often need to send data over the network and receive it on the other end. The time that takes is proportional to how large the data is. The smaller the data, the less time it takes and the less latency we have, resulting in a better player experience. "},{"title":"Saving Space​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#saving-space","content":"In the world of persistent data storage, we often need to store data across servers in data banks, such as Roblox DataStores. The amount of space that takes up on disks is proportional to how large the data is. Smaller data means less required storage space, which means we can store more data and take less time to save and load it. "},{"title":"When SerDes?​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#when-serdes","content":"SerDes is used whenever we need to compress data in a way that we can fully retrieve the original version of it, such as when we need to send data over the network or store it in data banks. Common use cases include: AnimationsMovementPhysicsSaving / Loading "},{"title":"How To SerDes In Roblox?​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#how-to-serdes-in-roblox","content":""},{"title":"Strings Are The Key​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#strings-are-the-key","content":"The only two arbitrarily-sized datatypes in Luau are the string datatype and the table datatype. Tables can only be composed of primitive datatypes or other tables, therefore if we need more control over the data we need to serialize, we need to use strings. With strings, we have access to individual characters, which in Lua are single-byte values. Strings enable byte-level control of our data. "},{"title":"When To Serialize​","type":1,"pageTitle":"What Is SerDes?","url":"/Squash/docs/intro#when-to-serialize","content":"Strings are great for serializing data, but we need to know when to serialize. We should serialize when we need to send data over the network or store it in data banks. However, the size of a string when sent over the network has some overhead compared to raw data. We should only serialize when the data we are serializing is large enough to warrant the overhead. TODO: Investigate how Roblox handles this and write about it. "},{"title":"How To Serialize?","type":0,"sectionRef":"#","url":"/Squash/docs/how","content":"","keywords":""},{"title":"Unsigned Integers​","type":1,"pageTitle":"How To Serialize?","url":"/Squash/docs/how#unsigned-integers","content":"Unsigned Integers are Whole Numbers that can be serialized with 1 through 8 bytes: N = { 0, 1, 2, 3, 4, ... } With 1 byte, the possible values that can be represented are: N1 = { 0, 1, 2, 3, ..., 253, 254, 255 } Where the minimum and maximum values are: 0 &lt;= N1 &lt;= 2^8 - 1 With 2 bytes, the possible values that can be represented are: N2 = { 0, 1, 2, 3, ..., 65,533, 65,534, 65,535 } Where the minimum and maximum values are: 0 &lt;= N2 &lt;= 2^16 - 1 With n bytes, the possible values that can be represented are: c = 2^8n Nn = { 0, 1, 2, ..., c - 2, c - 1 } Where the minimum and maximum values are: 0 &lt;= Nn &lt;= c - 1 "},{"title":"Signed Integers​","type":1,"pageTitle":"How To Serialize?","url":"/Squash/docs/how#signed-integers","content":"Signed Integers are Integers that can be serialized with 1 through 8 bytes: Z = { ..., -2, -1, 0, 1, 2, 3, ... } With 1 byte, the possible values that can be represented are: Z1 = { -128, -127, -126, ..., 125, 126, 127 } Where the minimum and maximum values are: -2^7 &lt;= Z1 &lt;= 2^7 - 1 With 2 bytes, the possible values that can be represented are: Z2 = { -32,768, -32,767, -32,766, ..., 32,765, 32,766, 32,767 } Where the minimum and maximum values are: -2^15 &lt;= Z2 &lt;= 2^15 - 1 With n bytes, the possible values that can be represented are: c = 2^(8n-1) Zn = { -c, -c + 1, -c + 2, ..., c - 3, c - 2, c - 1 } Where the minimum and maximum values are: -c &lt;= Zn &lt;= c - 1 "},{"title":"Floating Point​","type":1,"pageTitle":"How To Serialize?","url":"/Squash/docs/how#floating-point","content":"Floating Point Numbers are Real Numbers that can be serialized with either 4 or 8 bytes: R = { ..., -2.0, ..., -1.0, ..., 0.0, ..., 1.0, ..., 2.0, ... } With 4 bytes (called a float), the possible values that can be represented are a bit more complicated. The first bit is used to represent the sign of the number, the next 8 bits are used to represent the exponent, and the last 23 bits are used to represent the mantissa.  The formula for calculating the value of a float from its sign, exponent, and mantissa can be found at this wikipedia article. With 8 bytes (called a double). The first bit is used to represent the sign of the number, the next 11 bits are used to represent the exponent, and the last 52 bits are used to represent the mantissa.  The formula for calculating the value of a double from its sign, exponent, and mantissa can be found at this wikipedia article. Strings Strings are a bit more complicated than numbers. There are many ways to compress serialized strings, a lossless approach is to treat the string itself as a number and convert the number into a higher base, or radix. This is called base conversion. Strings come in many different flavors though, so we need to know how to serialize each flavor. Each string is composed of a sequence of certain characters. The set of those certain characters is called that string's smallest Alphabet. For example the string &quot;Hello, World!&quot; has the alphabet &quot; !,HWdelorw&quot;. We can assign a number to each character in the alphabet like its position in the string. With our example: { [' '] = 1, ['!'] = 2, [','] = 3, ['H'] = 4, ['W'] = 5, ['d'] = 6, ['e'] = 7, ['l'] = 8, ['o'] = 9, ['r'] = 10, ['w'] = 11, }  This allows us to now calculate a numerical value for each string using Positional Notation. The alphabet above has a radix of 11, so we can convert the string into a number with base 11. We can then use the base conversion formula, modified to work with strings, to convert the number with a radix 11 alphabet into a number with a radix 255 alphabet such as extended ASCII or UTF-8 minus the \\0 character. Long story short, you can fit log11(255) = 2.31 characters from the original string into a single character in the new string. This proccess is invertible and lossless, so we can convert the serialized string back into the original string when we are ready. To play with this concept for arbitrary alphabets, you can visit zamicol's base converter which supports these exact operations and comes with many pre-defined alphabets. "}]