"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9472],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>o});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var m=n.createContext({}),k=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=k(t.components);return n.createElement(m.Provider,{value:e},t.children)},d="mdxType",N={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,m=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=k(a),g=l,o=d["".concat(m,".").concat(g)]||d[g]||N[g]||r;return a?n.createElement(o,i(i({ref:e},u),{},{components:a})):n.createElement(o,i({ref:e},u))}));function o(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=g;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=t,p[d]="string"==typeof t?t:l,i[1]=p;for(var k=2;k<r;k++)i[k]=a[k];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},78565:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>N,frontMatter:()=>r,metadata:()=>p,toc:()=>k});var n=a(87462),l=(a(67294),a(3905));const r={sidebar_position:4},i="Packet Format And Insights",p={unversionedId:"binary",id:"binary",title:"Packet Format And Insights",description:"Strings are great for serializing data, but we need to know when to serialize. Certain kinds of data is cheaper to send over the network than others. This page is very technical, as it introduces the raw binary format remotes use internally and discusses the overhead of each type of data. If you are looking for a more high-level overview of the topic, check out the Why SerDes? or How To SerDes? pages.",source:"@site/docs/binary.md",sourceDirName:".",slug:"/binary",permalink:"/Squash/docs/binary",draft:!1,editUrl:"https://github.com/Data-Oriented-House/Squash/edit/main/docs/binary.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"How To Serialize?",permalink:"/Squash/docs/how"},next:{title:"Benchmarks and Measurements",permalink:"/Squash/docs/benchmarks"}},m={},k=[{value:"How Are Packets Sent And Recieved?",id:"how-are-packets-sent-and-recieved",level:2},{value:"Variable Length Quantities",id:"variable-length-quantities",level:3},{value:"The Enigmas",id:"the-enigmas",level:3},{value:"Packet Structure",id:"packet-structure",level:2},{value:"Single Remote Optimization Strategy",id:"single-remote-optimization-strategy",level:3},{value:"Packet Data Types",id:"packet-data-types",level:2},{value:"Client To Server",id:"client-to-server",level:3},{value:"Remote Event",id:"remote-event",level:4},{value:"Remote Function",id:"remote-function",level:4},{value:"Server To Client",id:"server-to-client",level:3},{value:"Remote Event",id:"remote-event-1",level:4},{value:"Remote Function",id:"remote-function-1",level:4},{value:"Data",id:"data",level:2},{value:"Void (Just Remote Overhead)",id:"void-just-remote-overhead",level:3},{value:"Server -&gt; Client",id:"server---client",level:4},{value:"Remote Events",id:"remote-events",level:5},{value:"Remote Functions",id:"remote-functions",level:5},{value:"Client -&gt; Server",id:"client---server",level:4},{value:"Remote Events",id:"remote-events-1",level:5},{value:"Remote Functions",id:"remote-functions-1",level:5},{value:"Nil",id:"nil",level:3},{value:"Booleans",id:"booleans",level:3},{value:"Numbers (Double, F64)",id:"numbers-double-f64",level:3},{value:"Strings",id:"strings",level:3},{value:"Vector2int16s",id:"vector2int16s",level:3},{value:"Vector2s",id:"vector2s",level:3},{value:"Vector3int16s",id:"vector3int16s",level:3},{value:"Vector3s",id:"vector3s",level:3},{value:"CFrames",id:"cframes",level:3},{value:"General Case",id:"general-case",level:4},{value:"Special Case",id:"special-case",level:4},{value:"Tables",id:"tables",level:3},{value:"Arrays",id:"arrays",level:4},{value:"Dictionaries",id:"dictionaries",level:4}],u={toc:k},d="wrapper";function N(t){let{components:e,...r}=t;return(0,l.kt)(d,(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"packet-format-and-insights"},"Packet Format And Insights"),(0,l.kt)("p",null,"Strings are great for serializing data, but we need to know when to serialize. Certain kinds of data is cheaper to send over the network than others. This page is ",(0,l.kt)("em",{parentName:"p"},"very")," technical, as it introduces the raw binary format remotes use internally and discusses the overhead of each type of data. If you are looking for a more high-level overview of the topic, check out the ",(0,l.kt)("a",{parentName:"p",href:"/docs/intro"},"Why SerDes?")," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/how"},"How To SerDes?")," pages."),(0,l.kt)("h2",{id:"how-are-packets-sent-and-recieved"},"How Are Packets Sent And Recieved?"),(0,l.kt)("p",null,"Roblox remotes sends its data in the form of ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Network_packet"},(0,l.kt)("em",{parentName:"a"},"packets")),". Every roblox packet is packed densely with data to reduce their size. Every byte is important and has meaning. To verify this information for yourself, source code and instructions on the hooking process are provided in ",(0,l.kt)("a",{target:"_blank",href:a(52179).Z},"this ZIP folder"),"."),(0,l.kt)("h3",{id:"variable-length-quantities"},"Variable Length Quantities"),(0,l.kt)("p",null,"Many of the values packets use can scale in size drastically, but still need to be kept as small as possible. There is a common format or strategy for doing this called ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Variable-length_quantity"},(0,l.kt)("em",{parentName:"a"},"Variable Length Quantities"))," that only use as much space as they need to represent a number. This is used for the length of strings, the number of arguments in a remote call, and the number of remotes in a session. It is labeled with the acronym ",(0,l.kt)("strong",{parentName:"p"},"VLQ")," in parenthesis since it takes the place of a size. We know these are VLQs and not just regular numbers because we have tested them with numbers that are too big to fit in their initial size and looked at the binary; they scale in size as the number grows."),(0,l.kt)("h3",{id:"the-enigmas"},"The Enigmas"),(0,l.kt)("p",null,"Even after literal days of looking at the binary, we still can't quite figure out some of the meanings behind some of the bytes. We have appropriately called these bytes \"Enigmas\". Over time these enigma bytes have been reduced, but they aren't quite gone yet. If you would like to help identify these bytes, you may download the packet viewer, run the tests you need to, and make a pull request improving ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Data-Oriented-House/Squash"},"Squash's documentation"),"!"),(0,l.kt)("h2",{id:"packet-structure"},"Packet Structure"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Packet Type 0\xd783 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Data 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Data 2"),(0,l.kt)("th",{parentName:"tr",align:null},"..."),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Delimiter 0\xd700 (byte)")))),(0,l.kt)("p",null,"Every packet of ",(0,l.kt)("strong",{parentName:"p"},"Packet Type 0\xd783")," ends with a ",(0,l.kt)("strong",{parentName:"p"},"Packet Delimiter 0\xd700")," (null) byte, but not all packet types do this."),(0,l.kt)("h3",{id:"single-remote-optimization-strategy"},"Single Remote Optimization Strategy"),(0,l.kt)("p",null,"When multiple packet datas are sent within a short enough time period using the same remote, they are merged into a single packet in the format above. This is why the packet delimiter is important; it says when to stop reading the packet. This is a strategy used to reduce packet overhead, such as the packet type, delimiter, and header necessary due to internet protocols."),(0,l.kt)("p",null,"It is a strategy to use only one remote and funnel all data through it, appending all packet datas into a single packet. This is why we recommend using a single remote for all data, and not using multiple remotes for different kinds of data."),(0,l.kt)("h2",{id:"packet-data-types"},"Packet Data Types"),(0,l.kt)("h3",{id:"client-to-server"},"Client To Server"),(0,l.kt)("h4",{id:"remote-event"},"Remote Event"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype 0\xd70701 (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id (3 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma 0\xd7000b (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Client To Server Id 0\xd770 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"User Information (5 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("p",null,"When creating remotes in studio before starting a session, each remote gets an incrementing ",(0,l.kt)("strong",{parentName:"p"},"Remote Id")," starting from an unpredictable number. This number is 3 bytes long. When creating remotes in a session, each remote gets a ",(0,l.kt)("strong",{parentName:"p"},"Remote Id")," that increments at different rates, and starts from a different value."),(0,l.kt)("p",null,"We are unsure of the format of the User Information, or what it actually contains. We hypothesize that it contains the player's UserId, but we have not been able to verify this."),(0,l.kt)("p",null,"The maximum ",(0,l.kt)("strong",{parentName:"p"},"Argument Count")," is 255 because the argument count is a single byte. This happens to also align with the maximum number of arguments a function can have in Luau."),(0,l.kt)("p",null,"There is no difference in size when firing remotes with different ids, or in short, the number of remotes does not affect bandwidth per packet."),(0,l.kt)("h4",{id:"remote-function"},"Remote Function"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype 0\xd70701 (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id (3 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma 0\xd7000b (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Client To Server Id 0\xd77b (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Call Count (VLQ)"),(0,l.kt)("th",{parentName:"tr",align:null},"User Information (5 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"Call Count")," is the number of times the remote function has been invoked since the start of the session. It increments by 2 every invocation, and is sent both ways from the ",(0,l.kt)("inlineCode",{parentName:"p"},"Server -> Client -> Server")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Client -> Server -> Client"),". We hypothesize that this is used to prevent duplicate packets from being processed, to prevent packets from being processed out of order, or to know if a packet was dropped."),(0,l.kt)("h3",{id:"server-to-client"},"Server To Client"),(0,l.kt)("h4",{id:"remote-event-1"},"Remote Event"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype 0\xd70701 (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id (3 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma 0\xd7000b (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Server To Client Id 0\xd76f (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("h4",{id:"remote-function-1"},"Remote Function"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype 0\xd70701 (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id (3 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma 0\xd7000b (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Server To Client Id 0\xd779 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Call Count (VLQ)"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Data 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("h2",{id:"data"},"Data"),(0,l.kt)("p",null,"Below are the different ways types of data are formatted in memory when packed into remotes."),(0,l.kt)("h3",{id:"void-just-remote-overhead"},"Void (Just Remote Overhead)"),(0,l.kt)("h4",{id:"server---client"},"Server -> Client"),(0,l.kt)("h5",{id:"remote-events"},"Remote Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Created"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma"),(0,l.kt)("th",{parentName:"tr",align:null},"Server To Client Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Delimiter"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"A"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77f6d11"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"B"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77d6d11"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"C"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77e6d11"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"D"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7430d19"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"E"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7470d19"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"F"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd74a0d19"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("h5",{id:"remote-functions"},"Remote Functions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Created"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma"),(0,l.kt)("th",{parentName:"tr",align:null},"Server To Client Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Call Count"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Delimiter"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"A"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd79ef104"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"B"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd79ff104"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"C"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7a0f104"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"D"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd727f506"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"E"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd72bf506"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"F"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd72ef506"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("h4",{id:"client---server"},"Client -> Server"),(0,l.kt)("h5",{id:"remote-events-1"},"Remote Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Created"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma"),(0,l.kt)("th",{parentName:"tr",align:null},"Client To Server Id"),(0,l.kt)("th",{parentName:"tr",align:null},"User Information"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Delimiter"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"A"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76d9109"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"B"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76b9109"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"C"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c9109"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"D"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd767960b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"E"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76b960b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"F"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76e960b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd770"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70159890a00"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("h5",{id:"remote-functions-1"},"Remote Functions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Created"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Subtype"),(0,l.kt)("th",{parentName:"tr",align:null},"Remote Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Enigma"),(0,l.kt)("th",{parentName:"tr",align:null},"Client To Server Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Call Count"),(0,l.kt)("th",{parentName:"tr",align:null},"User Information"),(0,l.kt)("th",{parentName:"tr",align:null},"Argument Count"),(0,l.kt)("th",{parentName:"tr",align:null},"Packet Delimiter"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"A"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7d9be07"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"B"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7dabe07"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Before"),(0,l.kt)("td",{parentName:"tr",align:null},'"C"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7dbbe07"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"D"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76fc309"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"E"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773c309"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"After"),(0,l.kt)("td",{parentName:"tr",align:null},'"F"'),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd783"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd776c309"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7000b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd77b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701c5b60800"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("h3",{id:"nil"},"Nil"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd701 (byte)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(nil)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"1"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("h3",{id:"booleans"},"Booleans"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd709 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Value (byte)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(true)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(false)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"false"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(true, true)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"),(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("h3",{id:"numbers-double-f64"},"Numbers (Double, F64)"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd70c (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Value (8 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(-5)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"-5"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7c014000000000000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(5)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"5"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd74014000000000000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(0, 0)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000000000000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000000000000000")))),(0,l.kt)("h3",{id:"strings"},"Strings"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd702 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Length (VLQ)"),(0,l.kt)("th",{parentName:"tr",align:null},"Value (Length bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'("Hello World!")')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"'H'"),(0,l.kt)("th",{parentName:"tr",align:null},"'e'"),(0,l.kt)("th",{parentName:"tr",align:null},"'l'"),(0,l.kt)("th",{parentName:"tr",align:null},"'l'"),(0,l.kt)("th",{parentName:"tr",align:null},"'o'"),(0,l.kt)("th",{parentName:"tr",align:null},"' '"),(0,l.kt)("th",{parentName:"tr",align:null},"'W'"),(0,l.kt)("th",{parentName:"tr",align:null},"'o'"),(0,l.kt)("th",{parentName:"tr",align:null},"'r'"),(0,l.kt)("th",{parentName:"tr",align:null},"'l'"),(0,l.kt)("th",{parentName:"tr",align:null},"'d'"),(0,l.kt)("th",{parentName:"tr",align:null},"'!'"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd748"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd765"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd720"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd757"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd772"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd764"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd721")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'("swous", "bibbity")')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"5"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"'w'"),(0,l.kt)("th",{parentName:"tr",align:null},"'o'"),(0,l.kt)("th",{parentName:"tr",align:null},"'u'"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"7"),(0,l.kt)("th",{parentName:"tr",align:null},"'b'"),(0,l.kt)("th",{parentName:"tr",align:null},"'i'"),(0,l.kt)("th",{parentName:"tr",align:null},"'b'"),(0,l.kt)("th",{parentName:"tr",align:null},"'b'"),(0,l.kt)("th",{parentName:"tr",align:null},"'i'"),(0,l.kt)("th",{parentName:"tr",align:null},"'t'"),(0,l.kt)("th",{parentName:"tr",align:null},"'y'"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd705"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd777"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd775"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd707"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd762"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd769"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd762"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd762"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd769"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd774"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd779")))),(0,l.kt)("h3",{id:"vector2int16s"},"Vector2int16s"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd718 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (2 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector2int16.new())")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"24"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd718"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector2int16.new(-5, 7))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"24"),(0,l.kt)("th",{parentName:"tr",align:null},"-5"),(0,l.kt)("th",{parentName:"tr",align:null},"7"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd718"),(0,l.kt)("td",{parentName:"tr",align:null},"0xfffb"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70007")))),(0,l.kt)("h3",{id:"vector2s"},"Vector2s"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd715 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (4 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector2.zero)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"(Vector2.new())")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"21"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd715"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector2.new(5, -1))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"21"),(0,l.kt)("th",{parentName:"tr",align:null},"5"),(0,l.kt)("th",{parentName:"tr",align:null},"-1"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd715"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd740a00000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7bf800000")))),(0,l.kt)("h3",{id:"vector3int16s"},"Vector3int16s"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd719 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (2 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Z (2 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector3int16.new())")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"25"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd719"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector3int16.new(-5, 7, 9))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"25"),(0,l.kt)("th",{parentName:"tr",align:null},"-5"),(0,l.kt)("th",{parentName:"tr",align:null},"7"),(0,l.kt)("th",{parentName:"tr",align:null},"9"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd719"),(0,l.kt)("td",{parentName:"tr",align:null},"0xfffb"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70007"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70009")))),(0,l.kt)("h3",{id:"vector3s"},"Vector3s"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd716 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Z (4 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector3.zero)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"(Vector3.new())")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"22"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd716"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(Vector3.new(59.2, -1.101, 9.3))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"22"),(0,l.kt)("th",{parentName:"tr",align:null},"59.2"),(0,l.kt)("th",{parentName:"tr",align:null},"-1.101"),(0,l.kt)("th",{parentName:"tr",align:null},"9.3"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd716"),(0,l.kt)("td",{parentName:"tr",align:null},"0x426ccccd"),(0,l.kt)("td",{parentName:"tr",align:null},"0xbf8ced91"),(0,l.kt)("td",{parentName:"tr",align:null},"0x4114cccd")))),(0,l.kt)("h3",{id:"cframes"},"CFrames"),(0,l.kt)("h4",{id:"general-case"},"General Case"),(0,l.kt)("p",null,"In the general case, CFrames have some arbitrary rotation that is not clean multiples of 90 degrees. This means that the rotation will not or cannot be enumerated, and therefore must be sent entirely. We do not understand the rotation format, but it is 6 bytes long, so forgive the elusive formatting we use. If you would like to help us figure out the rotation format, you may download the packet viewer, run the tests you need to, and make a pull request improving ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Data-Oriented-House/Squash"},"Squash's documentation"),"!"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd71b (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Z (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Id 0\xd700 (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Rotation (6 bytes)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.fromEulerAnglesYXZ(5, -1, 9))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"27"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"5, -1, 9"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd754009391a6cc")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.fromEulerAnglesYXZ(-1, 2, 3) + Vector3.new(-1, 2, -3))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"27"),(0,l.kt)("th",{parentName:"tr",align:null},"-1"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"-3"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"-1, 2, 3"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7bf800000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd740000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7c0400000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71c1d16b1de9e")))),(0,l.kt)("h4",{id:"special-case"},"Special Case"),(0,l.kt)("p",null,"In the special case, CFrames have rotations that are clean multiples of 90 degrees. This means that the rotation can be enumerated, and so only the enum is sent, and the rotation is reconstructed on the other side."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd71b (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"X (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Y (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Z (4 bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Id (byte)")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.identity)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.new())")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"27"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"2"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.new(938, 0, -2))")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"(CFrame.identity + Vector3.new(938, 0, -2))")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"27"),(0,l.kt)("th",{parentName:"tr",align:null},"938"),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"-2"),(0,l.kt)("th",{parentName:"tr",align:null},"2"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71b"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7446a80"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd7c0000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702")))),(0,l.kt)("p",null,"Below are all of the different axis-angle representation of the rotation matrices that map to each rotation id. We do not know why there are holes in the Ids but have verified through exhaustive testing that these are the only Ids."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Id"),(0,l.kt)("th",{parentName:"tr",align:null},"Angle"),(0,l.kt)("th",{parentName:"tr",align:null},"X"),(0,l.kt)("th",{parentName:"tr",align:null},"Y"),(0,l.kt)("th",{parentName:"tr",align:null},"Z"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd703"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd705"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd706"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd707"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70a"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70d"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70e"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"-1"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd710"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd711"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd714"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd715"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd717"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd718"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd719"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"-1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71b"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71c"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71e"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71f"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd720"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd722"),(0,l.kt)("td",{parentName:"tr",align:null},"3\u03c0/2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd723"),(0,l.kt)("td",{parentName:"tr",align:null},"\u03c0"),(0,l.kt)("td",{parentName:"tr",align:null},"-1/\u221a2"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1/\u221a2")))),(0,l.kt)("h3",{id:"tables"},"Tables"),(0,l.kt)("p",null,"Tables are separated into two types: Arrays and Dictionaries. This is because internally they use different types. This allows them to optimize how they read each case, at the cost of less flexibility of what the table can contain. Arrays may only have numerical indices, and must be contiguous. If you send an array with a hole, it will stop reading at the first hole. Dictionaries may only have string indices, and don't have an internal order; holes don't exist in dictionaries. Using any other kind of key will result in an error."),(0,l.kt)("h4",{id:"arrays"},"Arrays"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd71e (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Element Count (VLQ)"),(0,l.kt)("th",{parentName:"tr",align:null},"Element 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Element 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"({})")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"30"),(0,l.kt)("th",{parentName:"tr",align:null},"0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71e"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd700")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"({true})")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"30"),(0,l.kt)("th",{parentName:"tr",align:null},"1"),(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71e"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"({[1] = true, [3] = false})")),(0,l.kt)("p",null,"The array is cut off at the first nil value."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"30"),(0,l.kt)("th",{parentName:"tr",align:null},"1"),(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71e"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'({"sofa is ", 8})')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"30"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"8"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"'o'"),(0,l.kt)("th",{parentName:"tr",align:null},"'f'"),(0,l.kt)("th",{parentName:"tr",align:null},"'a'"),(0,l.kt)("th",{parentName:"tr",align:null},"' '"),(0,l.kt)("th",{parentName:"tr",align:null},"'i'"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"' '"),(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71e"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd708"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd766"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd761"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd720"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd769"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd720"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd74020000000000000")))),(0,l.kt)("h4",{id:"dictionaries"},"Dictionaries"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type 0\xd71f (byte)"),(0,l.kt)("th",{parentName:"tr",align:null},"Pair Count (VLQ)"),(0,l.kt)("th",{parentName:"tr",align:null},"Key 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Value 1"),(0,l.kt)("th",{parentName:"tr",align:null},"Key 2"),(0,l.kt)("th",{parentName:"tr",align:null},"Value 2"),(0,l.kt)("th",{parentName:"tr",align:null},"...")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"({sword = true})")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"31"),(0,l.kt)("th",{parentName:"tr",align:null},"1"),(0,l.kt)("th",{parentName:"tr",align:null},"5"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"'w'"),(0,l.kt)("th",{parentName:"tr",align:null},"'o'"),(0,l.kt)("th",{parentName:"tr",align:null},"'r'"),(0,l.kt)("th",{parentName:"tr",align:null},"'d'"),(0,l.kt)("th",{parentName:"tr",align:null},"9"),(0,l.kt)("th",{parentName:"tr",align:null},"true"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd705"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd777"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd772"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd764"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd709"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd701")))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'({stamina = "high", ["health"] = 82.1})')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"31"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"7"),(0,l.kt)("th",{parentName:"tr",align:null},"'s'"),(0,l.kt)("th",{parentName:"tr",align:null},"'t'"),(0,l.kt)("th",{parentName:"tr",align:null},"'a'"),(0,l.kt)("th",{parentName:"tr",align:null},"'m'"),(0,l.kt)("th",{parentName:"tr",align:null},"'i'"),(0,l.kt)("th",{parentName:"tr",align:null},"'n'"),(0,l.kt)("th",{parentName:"tr",align:null},"'a'"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"4"),(0,l.kt)("th",{parentName:"tr",align:null},"'h'"),(0,l.kt)("th",{parentName:"tr",align:null},"'e'"),(0,l.kt)("th",{parentName:"tr",align:null},"'a'"),(0,l.kt)("th",{parentName:"tr",align:null},"'l'"),(0,l.kt)("th",{parentName:"tr",align:null},"'t'"),(0,l.kt)("th",{parentName:"tr",align:null},"'h'"),(0,l.kt)("th",{parentName:"tr",align:null},"6"),(0,l.kt)("th",{parentName:"tr",align:null},"'h'"),(0,l.kt)("th",{parentName:"tr",align:null},"'e'"),(0,l.kt)("th",{parentName:"tr",align:null},"'a'"),(0,l.kt)("th",{parentName:"tr",align:null},"'l'"),(0,l.kt)("th",{parentName:"tr",align:null},"'t'"),(0,l.kt)("th",{parentName:"tr",align:null},"'h'"),(0,l.kt)("th",{parentName:"tr",align:null},"12"),(0,l.kt)("th",{parentName:"tr",align:null},"82.1"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0\xd71f"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd707"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd773"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd774"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd761"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76d"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd769"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76e"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd761"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd702"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd704"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd768"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd765"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd761"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd774"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd768"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd706"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd768"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd765"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd761"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd76c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd774"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd768"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd70c"),(0,l.kt)("td",{parentName:"tr",align:null},"0\xd74054866666666666")))))}N.isMDXComponent=!0},52179:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/files/PacketViewerSource-011de9f0decb1449cc37915773648a47.zip"}}]);