"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6796],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,y=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={sidebar_position:2},i="Why Squash?",s={unversionedId:"why",id:"why",title:"Why Squash?",description:"Squash has come into existence to solve a common problem many developers end up facing. Imagine you are making a custom character controller and need to send updates to the server multiple times a second. If you don't play your cards right, you could end up sending an intolerable amount of data over the network per player. This is bad because it takes a lot of bandwidth to send and receive data over the network. Now imagine making a save / load system, depending on the amount of information you need to save and load, you can end up making the player wait a long time to save and load their data. This is bad because it reduces player retention rates, and lowers the overall quality of the player experience.",source:"@site/docs/why.md",sourceDirName:".",slug:"/why",permalink:"/Squash/docs/why",draft:!1,editUrl:"https://github.com/Data-Oriented-House/Squash/edit/main/docs/why.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"What Is SerDes?",permalink:"/Squash/docs/intro"},next:{title:"When To Serialize?",permalink:"/Squash/docs/when"}},l={},d=[{value:"Why Inconsistent Naming Convention?",id:"why-inconsistent-naming-convention",level:2}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"why-squash"},"Why Squash?"),(0,o.kt)("p",null,"Squash has come into existence to solve a common problem many developers end up facing. Imagine you are making a custom character controller and need to send updates to the server multiple times a second. If you don't play your cards right, you could end up sending an intolerable amount of data over the network ",(0,o.kt)("em",{parentName:"p"},"per player"),". This is bad because it takes a lot of bandwidth to send and receive data over the network. Now imagine making a save / load system, depending on the amount of information you need to save and load, you can end up making the player wait a long time to save and load their data. This is bad because it reduces player retention rates, and lowers the overall quality of the player experience."),(0,o.kt)("h2",{id:"why-inconsistent-naming-convention"},"Why Inconsistent Naming Convention?"),(0,o.kt)("p",null,"Squash lowercases some of its type names, and PascalCases others. Why? Because it was designed to work with the ",(0,o.kt)("inlineCode",{parentName:"p"},"typeof")," function. For every supported type, you can safely do ",(0,o.kt)("inlineCode",{parentName:"p"},"Squash[typeof(variable)].ser(variable)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Squash[typeof(variable)].des(variable)"),". This enables automation of serialization and deserialization, which is useful for automating saving and loading data."))}p.isMDXComponent=!0}}]);