"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[427],{26520:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"Signature","desc":"Signatures are used to represent bitsets of components.","lua_type":"string","private":true,"source":{"line":77,"path":"src/init.lua"}},{"name":"Name","desc":"A name is a unique identifier used as a key to access components of entities.","lua_type":"any","source":{"line":85,"path":"src/init.lua"}},{"name":"Component","desc":"A component is user-defined data that is accessed by an entity. It is defined through the Component.Build function. It is created through the Component.Create function.","lua_type":"any","source":{"line":93,"path":"src/init.lua"}},{"name":"Entity<E>","desc":"An entity is a unique identifier used to access components by their names. It is created through the Entity.Create function. The entity\'s components can be accessed by Component.Get or Component.GetAll.","lua_type":"E","source":{"line":101,"path":"src/init.lua"}},{"name":"Collection","desc":"A set of entities containing specific components.","fields":[{"name":"[Entity]","lua_type":"true","desc":""}],"source":{"line":110,"path":"src/init.lua"}},{"name":"EntityData","desc":"Information about an entity\'s components.","fields":[{"name":"Signature","lua_type":"Signature","desc":""},{"name":"Components","lua_type":"{ [Name]: Component }","desc":""}],"private":true,"source":{"line":123,"path":"src/init.lua"}},{"name":"ComponentArgs<E, N, C, D>","desc":"Optional arguments to build a component with the Component.Build function.","fields":[{"name":"Constructor","lua_type":"<T...>(Entity: Entity<E>, Name: N, T...) -> C","desc":""},{"name":"Destructor","lua_type":"<T...>(Entity: Entity<E>, Name: N, T...) -> D","desc":""}],"source":{"line":136,"path":"src/init.lua"}},{"name":"ComponentData<E, N, C, D>","desc":"Information about a component.","fields":[{"name":"Constructor","lua_type":"<T...>(Entity: Entity<E>, Name: N, T...) -> C","desc":""},{"name":"Destructor","lua_type":"<T...>(Entity: Entity<E>, Name: N, T...) -> D","desc":""},{"name":"Signature","lua_type":"Signature","desc":""}],"private":true,"source":{"line":151,"path":"src/init.lua"}},{"name":"WorldArgs","desc":"Optional arguments to build a component with the Component.Build function. Everything is optional, including the On table.","fields":[{"name":"Component?.Build","lua_type":"((Name: Name, ComponentData: ComponentData) -> ())?","desc":""},{"name":"Component?.Create","lua_type":"((Entity: Entity, Name: Name, Component: Component) -> ())?","desc":""},{"name":"Component?.Delete","lua_type":"((Entity: Entity, Name: Name, Deleted: any) -> ())?","desc":""},{"name":"Entity?.Create","lua_type":"((Entity: Entity) -> ())?","desc":""},{"name":"Entity?.Delete","lua_type":"((Entity: Entity) -> ())?","desc":""}],"source":{"line":168,"path":"src/init.lua"}},{"name":"World","desc":"","fields":[{"name":"Collection.Get","lua_type":"(Names: { Name }) -> Collection","desc":""},{"name":"Collection.GetFirst","lua_type":"(Names: { Name }) -> Entity<any>","desc":""},{"name":"Component.Build","lua_type":"(Name: Name, ComponentArgs: ComponentArgs?) -> ()","desc":""},{"name":"Component.Create","lua_type":"(Entity: Entity, Name: Name, ...any) -> Component?","desc":""},{"name":"Component.Delete","lua_type":"(Entity: Entity, Name: Name, ...any) -> any?","desc":""},{"name":"Component.GetAll","lua_type":"(Entity: Entity) -> { [Name]: Component }","desc":""},{"name":"Component.Get","lua_type":"(Entity: Entity, Name: Name) -> Component?","desc":""},{"name":"Entity.Create","lua_type":"() -> Entity","desc":""},{"name":"Entity.Delete","lua_type":"(Entity: Entity) -> ()","desc":""},{"name":"Entity.Register","lua_type":"(Entity: Entity) -> ()","desc":""},{"name":"_NextPlace","lua_type":"number","desc":""},{"name":"_NameToData","lua_type":"{ [Name]: ComponentData }","desc":""},{"name":"_EntityToData","lua_type":"{ [Entity]: EntityData }","desc":""},{"name":"_SignatureToCollection","lua_type":"{ [Signature]: Collection }","desc":""},{"name":"_Component.Build","lua_type":"(Name : Name, ComponentData : ComponentData) -> ()","desc":""},{"name":"_Component.Create","lua_type":"(Entity: Entity, Name: Name, Component: Component) -> ()","desc":""},{"name":"_Component.Delete","lua_type":"(Entity: Entity, Name: Name, Deleted: any) -> ()","desc":""},{"name":"_Entity.Create","lua_type":"(Entity: Entity) -> ()","desc":""},{"name":"_Entity.Delete","lua_type":"(Entity: Entity) -> ()","desc":""}],"source":{"line":205,"path":"src/init.lua"}}],"name":"Stew","desc":"Stew is the package itself. Here you can mess with worlds and types.","source":{"line":68,"path":"src/init.lua"}}')}}]);